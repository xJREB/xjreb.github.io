{"version":3,"file":"component---src-pages-index-js-d97440e106021b32af81.js","mappings":"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","sources":["webpack://jreb-cv/./node_modules/camelcase/index.js","webpack://jreb-cv/../src/image-utils.ts","webpack://jreb-cv/../src/components/hooks.ts","webpack://jreb-cv/../src/components/layout-wrapper.tsx","webpack://jreb-cv/../src/components/picture.tsx","webpack://jreb-cv/../src/components/placeholder.tsx","webpack://jreb-cv/../src/components/main-image.tsx","webpack://jreb-cv/../src/components/gatsby-image.server.tsx","webpack://jreb-cv/../src/components/gatsby-image.browser.tsx","webpack://jreb-cv/../src/components/static-image.server.tsx","webpack://jreb-cv/../src/components/static-image.tsx","webpack://jreb-cv/./src/components/footer.js","webpack://jreb-cv/./src/components/header.js","webpack://jreb-cv/./src/components/layout.js","webpack://jreb-cv/./src/components/gutter/gutter.js","webpack://jreb-cv/./src/components/home-about.js","webpack://jreb-cv/./src/components/home-awards.js","webpack://jreb-cv/./src/components/home-contact.js","webpack://jreb-cv/./src/components/home-research.js","webpack://jreb-cv/./src/components/landing/hero.js","webpack://jreb-cv/./src/components/landing/landing.js","webpack://jreb-cv/./src/pages/index.js","webpack://jreb-cv/./node_modules/react-icons/lib/iconsManifest.mjs","webpack://jreb-cv/./node_modules/react-icons/lib/iconContext.mjs","webpack://jreb-cv/./node_modules/react-icons/lib/iconBase.mjs"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n    const { site } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        author\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n    const config = site.siteMetadata;\r\n    return (\r\n        <footer>\r\n            <div className=\"break\"></div>\r\n            <div className=\"footer-content\">\r\n                <div>\r\n                    Made with <a href=\"https://www.gatsbyjs.com\">Gatsby</a>,\r\n                    template adapted from{\" \"}\r\n                    <a href=\"https://knightjdr.github.io/gatsby-starter-scientist\">\r\n                        gatsby-starter-scientist\r\n                    </a>\r\n                </div>\r\n                <div className=\"break\"></div>\r\n                <div>{`© ${new Date().getFullYear()} ${config.author}`}</div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport {\r\n    FaChalkboardTeacher,\r\n    FaHome,\r\n    FaUniversity,\r\n    FaReadme,\r\n} from \"react-icons/fa\";\r\nimport { MdLibraryBooks, MdWork } from \"react-icons/md\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"home-link-container\">\r\n                <Link to=\"/\">\r\n                    <FaHome></FaHome>\r\n                    Home\r\n                </Link>\r\n            </div>\r\n            <div className=\"nav-link-container\">\r\n                <Link to=\"/cv/\">\r\n                    <MdWork></MdWork>\r\n                    CV\r\n                </Link>\r\n                <Link to=\"/publications/\">\r\n                    <MdLibraryBooks></MdLibraryBooks>\r\n                    Publications\r\n                </Link>\r\n                <Link to=\"/teaching/\">\r\n                    <FaChalkboardTeacher></FaChalkboardTeacher>\r\n                    Teaching\r\n                </Link>\r\n                <Link to=\"/service/\">\r\n                    <FaUniversity></FaUniversity>\r\n                    Service\r\n                </Link>\r\n                <Link to=\"/blog/\">\r\n                    <FaReadme></FaReadme>\r\n                    Blog\r\n                </Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport \"./layout.css\";\r\n\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n    const { site } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        title\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n    const { title } = site.siteMetadata;\r\n    return (\r\n        <div>\r\n            <title>{`${title} | ${pageTitle}`}</title>\r\n            <Header />\r\n            <main>{children}</main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport \"./gutter.css\";\r\n\r\n\r\nexport const GutterLeft = () => <div className=\"gutter gutter-left\" />;\r\n\r\nexport const GutterRight = () => <div className=\"gutter gutter-right\" />;\r\n","import { StaticImage } from \"gatsby-plugin-image\";\r\nimport React from \"react\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h2>About Me</h2>\r\n            <div>\r\n                <StaticImage\r\n                    alt=\"Portrait Justus Bogner\"\r\n                    src=\"../images/jb-portrait.jpg\"\r\n                    className=\"portrait\"\r\n                    formats={[\"auto\", \"webp\", \"avif\"]}\r\n                />\r\n                <p>\r\n                    Hi! I'm Justus, a researcher in{\" \"}\r\n                    <i>empirical software engineering</i>. I also teach software\r\n                    engineering courses at the university. Before and during my\r\n                    PhD, I was employed for more than 9 years as a software\r\n                    engineer in industry, building mostly web- and service-based\r\n                    enterprise applications.\r\n                </p>\r\n                <p>\r\n                    Currently, I'm an Assistant Professor in Software\r\n                    Engineering at the Vrije Universiteit Amsterdam (\r\n                    <a href=\"https://vu.nl/en\">the VU</a>). My position is\r\n                    located in Prof. Patricia Lago's S2 group (\r\n                    <a href=\"https://s2group.cs.vu.nl/\">\r\n                        Software and Sustainability\r\n                    </a>\r\n                    ). I received my PhD in Computer Science (Dr. rer. nat.)\r\n                    from the University of Stuttgart, Germany. My advisors were\r\n                    Prof. Alfred Zimmermann and Prof. Stefan Wagner. After that,\r\n                    I was a postdoc at the Institute of Software Engineering at\r\n                    the University of Stuttgart for 3 years. Within Prof.\r\n                    Wagner's{\" \"}\r\n                    <a href=\"https://www.iste.uni-stuttgart.de/ese\">\r\n                        Empirical Software Engineering Group\r\n                    </a>\r\n                    , I led the division \"Software Engineering for AI- &\r\n                    Microservice-Based Systems\" (SE4AI&MS). I regularly review\r\n                    for journals, conferences, and workshops, such as IEEE TSE,\r\n                    EMSE, ACM TOSEM, IEEE Software, ECSA, CAIN, or ESEM. Lastly,\r\n                    I am also a co-organizer of the{\" \"}\r\n                    <a href=\"https://sa-ml.github.io/saml2024/\">\r\n                        SAML workshop\r\n                    </a>\r\n                    , which combines software architecture and machine learning.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { FaAward } from \"react-icons/fa\";\r\n\r\nconst Awards = () => {\r\n    return (\r\n        <div>\r\n            <h2>\r\n                <FaAward></FaAward> Awards\r\n            </h2>\r\n            <div>\r\n                <p>I have won the following awards:</p>\r\n\r\n                <p>\r\n                    <strong>Distinguished Reviewer Award</strong>\r\n                    <br />\r\n                    At the European Conference on Software Architecture (ECSA),\r\n                    2024\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>\r\n                        Honorable Mention for Best Paper Award (Runner-Up)\r\n                    </strong>\r\n                    <br />\r\n                    At the European Conference on Software Architecture (ECSA),\r\n                    2024, for the paper:\r\n                    <br />\r\n                    <a href=\"https://arxiv.org/abs/2406.19847\">\r\n                        \"An Analysis of MLOps Architectures: A Systematic\r\n                        Mapping Study\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Distinguished Artifact Award</strong>\r\n                    <br />\r\n                    At the International Conference on Software Architecture\r\n                    (ICSA), 2024, for the paper:\r\n                    <br />\r\n                    <a href=\"https://arxiv.org/abs/2402.13696\">\r\n                        \"How Do Microservice API Patterns Impact\r\n                        Understandability? A Controlled Experiment\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Distinguished Artifact Award</strong>\r\n                    <br />\r\n                    At the International Conference on Software Architecture\r\n                    (ICSA), 2024, for the paper:\r\n                    <br />\r\n                    <a href=\"https://arxiv.org/abs/2402.13710\">\r\n                        \"RESTRuler: Towards Automatically Identifying Violations\r\n                        of RESTful Design Rules in Web APIs\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Distinguished Paper Award</strong>\r\n                    <br />\r\n                    At the International Conference on Software Engineering\r\n                    (ICSE), Software Engineering in Society (SEIS) track, 2024,\r\n                    for the paper:\r\n                    <br />\r\n                    <a href=\"https://arxiv.org/abs/2401.02268\">\r\n                        \"Beyond Self-Promotion: How Software Engineering\r\n                        Research Is Discussed on LinkedIn\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Best Reviewer Award</strong>\r\n                    <br />\r\n                    At the European Conference on Software Architecture (ECSA),\r\n                    2022\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>infos Dissertation Award</strong>\r\n                    <br />\r\n                    From the Informatik Forum Stuttgart, 2021, for my PhD\r\n                    thesis:\r\n                    <br />\r\n                    <a href=\"http://dx.doi.org/10.18419/opus-10950\">\r\n                        \"On the Evolvability Assurance of Microservices:\r\n                        Metrics, Scenarios, and Patterns\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Best Presentation Award</strong>\r\n                    <br />\r\n                    At the International Conference on Technical Debt\r\n                    (TechDebt), 2021, for the paper:\r\n                    <br />\r\n                    <a href=\"https://doi.org/10.1109/TechDebt52882.2021.00016\">\r\n                        \"Characterizing Technical Debt and Antipatterns in\r\n                        AI-Based Systems: A Systematic Mapping Study\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Distinguished Paper Award</strong>\r\n                    <br />\r\n                    At the International Conference on Software Maintenance and\r\n                    Evolution (ICSME), 2019, for the paper:\r\n                    <br />\r\n                    <a href=\"https://doi.org/10.1109/ICSME.2019.00089\">\r\n                        \"Assuring the Evolvability of Microservices: Insights\r\n                        into Industry Practices and Challenges\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Best Student Paper Award</strong>\r\n                    <br />\r\n                    At the European Conference on Service-Oriented and Cloud\r\n                    Computing (ESOCC), 2018, for the paper:\r\n                    <br />\r\n                    <a href=\"https://doi.org/10.1007/978-3-030-63161-1_10\">\r\n                        \"Towards an Evolvability Assurance Method for\r\n                        Service-Based Systems\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Best Presentation Award</strong>\r\n                    <br />\r\n                    At the Central European Workshop on Services and their\r\n                    Composition (ZEUS), 2018, for the paper:\r\n                    <br />\r\n                    <a href=\"http://ceur-ws.org/Vol-2072/paper2.pdf\">\r\n                        \"Analyzing the Relevance of SOA Patterns for\r\n                        Microservice-Based Systems\"\r\n                    </a>\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Master Thesis Award</strong>\r\n                    <br />\r\n                    From the Herman Hollerith Center, 2015, for my M.Sc. thesis:\r\n                    <br />\r\n                    \"Identifying Relevant Software Architecture Patterns for IT\r\n                    Service Monitoring and Reporting Solutions\"\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Awards;\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\nimport {\r\n    FaGithub,\r\n    FaMailBulk,\r\n    FaMastodon,\r\n    FaResearchgate,\r\n    FaTwitter,\r\n    FaLinkedin,\r\n} from \"react-icons/fa\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { SiGooglescholar } from \"react-icons/si\";\r\n\r\nconst Footer = () => {\r\n    const { site } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        author\r\n                        social {\r\n                            twitter\r\n                            mastodon\r\n                            github\r\n                            email\r\n                            researchgate\r\n                            googleScholar\r\n                            linkedIn\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n    const config = site.siteMetadata;\r\n    const {\r\n        twitter,\r\n        mastodon,\r\n        github,\r\n        email,\r\n        researchgate,\r\n        googleScholar,\r\n        linkedIn,\r\n    } = config.social;\r\n    return (\r\n        <div>\r\n            <h2>\r\n                <FaMailBulk></FaMailBulk> Contact\r\n            </h2>\r\n            <div>\r\n                <p>You can reach or follow me via the following ways:</p>\r\n                <MdEmail></MdEmail> Email:{\" \"}\r\n                <a href={`mailto:${email}`}>{email}</a>\r\n                <br />\r\n                <FaMastodon></FaMastodon> Mastodon:{\" \"}\r\n                <a href={mastodon} rel=\"me\">\r\n                    {mastodon.substring(mastodon.indexOf(\"//\") + 2)}\r\n                </a>\r\n                <br />\r\n                <FaTwitter></FaTwitter> Twitter:{\" \"}\r\n                <a href={twitter}>\r\n                    {twitter.substring(twitter.indexOf(\".com/\") + 5)}\r\n                </a>\r\n                <br />\r\n                <FaLinkedin></FaLinkedin> LinkedIn:{\" \"}\r\n                <a href={linkedIn}>{config.author}</a>\r\n                <br />\r\n                <FaGithub></FaGithub> GitHub:{\" \"}\r\n                <a href={github}>\r\n                    {github.substring(github.indexOf(\".com/\") + 5)}\r\n                </a>\r\n                <br />\r\n                <FaResearchgate></FaResearchgate> Researchgate:{\" \"}\r\n                <a href={researchgate}>{config.author}</a>\r\n                <br />\r\n                <SiGooglescholar></SiGooglescholar> Google Scholar:{\" \"}\r\n                <a href={googleScholar}>{config.author}</a>\r\n                <p>\r\n                    If you have questions about my research, want to write your\r\n                    student thesis with me, or have an idea for a study\r\n                    collaboration related to my research interest, feel free to\r\n                    reach out!\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"gatsby\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport React from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nconst Research = () => {\r\n    return (\r\n        <div>\r\n            <h2>\r\n                <FaSearch></FaSearch> Research\r\n            </h2>\r\n            <div>\r\n                <p>\r\n                    To study and improve software engineering, I apply both\r\n                    quantitative and qualitative{\" \"}\r\n                    <strong>empirical methods</strong>, such as controlled\r\n                    experiments, systematic literature reviews, surveys,\r\n                    interviews, repository mining, or case studies. Based on\r\n                    these results, I then create and evaluate tools or methods\r\n                    to support software professionals. While I conducted studies\r\n                    in other areas, my two main SE knowledge areas are{\" \"}\r\n                    <strong>software architecture</strong> and{\" \"}\r\n                    <strong>software quality</strong>, especially evolvability,\r\n                    technical debt, and sustainability. Moreover, I mainly study\r\n                    two types of systems described below. For more details,\r\n                    please refer to my{\" \"}\r\n                    <Link to=\"/publications/\">publications</Link>.\r\n                </p>\r\n\r\n                <div>\r\n                    <h3>Microservice-based Systems</h3>\r\n                    <figure className=\"research-images\">\r\n                        <StaticImage\r\n                            alt=\"Microservices\"\r\n                            src=\"../images/microservices.png\"\r\n                            formats={[\"auto\", \"webp\", \"avif\"]}\r\n                        />\r\n                        <figcaption>\r\n                            Microservices, based on <br />\r\n                            <a href=\"https://www.martinfowler.com/articles/microservices.html\">\r\n                                Martin Fowler's article\r\n                            </a>\r\n                            .\r\n                        </figcaption>\r\n                    </figure>\r\n                    <p>\r\n                        In my{\" \"}\r\n                        <a href=\"http://dx.doi.org/10.18419/opus-10950\">\r\n                            PhD thesis\r\n                        </a>\r\n                        , I studied the evolvability assurance of the\r\n                        architectural style <strong>microservices</strong>, and\r\n                        approached the topic via metrics, scenario-based\r\n                        evaluation, and (anti-)patterns. While I still continue\r\n                        parts of this line of research, I'm also interested in\r\n                        microservices migration, the design of RESTful APIs, and\r\n                        web-based applications in general.\r\n                    </p>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3>AI-based Systems</h3>\r\n                    <figure className=\"research-images\">\r\n                        <StaticImage\r\n                            alt=\"AI-based systems\"\r\n                            src=\"../images/ai-based-systems.jpg\"\r\n                            formats={[\"auto\", \"webp\", \"avif\"]}\r\n                        />\r\n                        <figcaption>\r\n                            Artificial Intelligence,\r\n                            <br />\r\n                            photo by{\" \"}\r\n                            <a href=\"https://www.pexels.com/photo/love-art-earth-summer-8849282/\">\r\n                                Tara Winstead\r\n                            </a>\r\n                            .\r\n                        </figcaption>\r\n                    </figure>\r\n                    <p>\r\n                        After my PhD, I also broadened my scope with an\r\n                        additional research area: software engineering for\r\n                        AI-based systems (SE4AI). Here, I am mostly interested\r\n                        in the architecture and quality assurance of systems\r\n                        with AI components, e.g., systems which include one or\r\n                        more machine learning models. Moreover, I study Green AI\r\n                        from a software engineering perspective.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Research;\r\n","import { StaticImage } from \"gatsby-plugin-image\";\r\nimport React from \"react\";\r\n\r\nconst Hero = ({ children }) => {\r\n    return (\r\n        <div style={{ display: \"grid\" }}>\r\n            <StaticImage\r\n                style={{\r\n                    gridArea: \"1/1\",\r\n                    maxHeight: \"400px\",\r\n                }}\r\n                layout=\"fullWidth\"\r\n                alt=\"Header Image\"\r\n                src=\"../../images/hero.jpg\"\r\n                formats={[\"auto\", \"webp\", \"avif\"]}\r\n            />\r\n            <div\r\n                style={{\r\n                    gridArea: \"1/1\",\r\n                    position: \"relative\",\r\n                    placeItems: \"center\",\r\n                    display: \"grid\",\r\n                    color: \"var(--color-font-light)\",\r\n                    maxWidth: \"1080px\",\r\n                }}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hero;\r\n","import { graphql, Link, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Hero from \"./hero\";\r\n\r\nconst Landing = () => {\r\n    const { site } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        author\r\n                        description\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n\r\n    const { author, description } = site.siteMetadata;\r\n\r\n    return (\r\n        <div className=\"landing\">\r\n            <Hero>\r\n                <div>\r\n                    <h1>Dr. {author}</h1>\r\n                    <p>{description}</p>\r\n                    <div className=\"landing-links\">\r\n                        <Link to=\"/#contact\">Contact</Link>\r\n                        <Link to=\"/#research\">Research</Link>\r\n                        <Link to=\"/#awards\">Awards</Link>\r\n                    </div>\r\n                </div>\r\n            </Hero>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { GutterLeft, GutterRight } from \"../components/gutter/gutter\";\r\nimport About from \"../components/home-about\";\r\nimport Awards from \"../components/home-awards\";\r\nimport Contact from \"../components/home-contact\";\r\nimport Research from \"../components/home-research\";\r\nimport Landing from \"../components/landing/landing\";\r\nimport Layout from \"../components/layout\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Layout pageTitle=\"Home Page\">\r\n            <Landing />\r\n            <div className=\"home-layout\">\r\n                <GutterLeft />\r\n                <div className=\"home-inner\">\r\n                    <section className=\"about\">\r\n                        <About></About>\r\n                    </section>\r\n\r\n                    <section className=\"contact\" id=\"contact\">\r\n                        <Contact></Contact>\r\n                    </section>\r\n\r\n                    <section className=\"research\" id=\"research\">\r\n                        <Research></Research>\r\n                    </section>\r\n\r\n                    <section className=\"awards\" id=\"awards\">\r\n                        <Awards></Awards>\r\n                    </section>\r\n                </div>\r\n                <GutterRight />\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\nexport const Head = () => (\r\n    <>\r\n        <meta\r\n            name=\"google-site-verification\"\r\n            content=\"Z5awUoZA4VyZVQddqZ4j0rW_uitttNkElEFSZ9qYaNk\"\r\n        />\r\n    </>\r\n);\r\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && /*#__PURE__*/React.createContext(DefaultContext);","var _excluded = [\"attr\", \"size\", \"title\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext.mjs\";\nfunction Tree2Element(tree) {\n  return tree && tree.map((node, i) => /*#__PURE__*/React.createElement(node.tag, _objectSpread({\n    key: i\n  }, node.attr), Tree2Element(node.child)));\n}\nexport function GenIcon(data) {\n  return props => /*#__PURE__*/React.createElement(IconBase, _extends({\n    attr: _objectSpread({}, data.attr)\n  }, props), Tree2Element(data.child));\n}\nexport function IconBase(props) {\n  var elem = conf => {\n    var {\n        attr,\n        size,\n        title\n      } = props,\n      svgProps = _objectWithoutProperties(props, _excluded);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return /*#__PURE__*/React.createElement(\"svg\", _extends({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: _objectSpread(_objectSpread({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && /*#__PURE__*/React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? /*#__PURE__*/React.createElement(IconContext.Consumer, null, conf => elem(conf)) : elem(DefaultContext);\n}"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","Footer","site","useStaticQuery","config","siteMetadata","React","href","Date","getFullYear","author","Header","Link","to","FaHome","MdWork","MdLibraryBooks","FaChalkboardTeacher","FaUniversity","FaReadme","_ref","pageTitle","title","GutterLeft","GutterRight","About","StaticImage","formats","require","Awards","FaAward","twitter","mastodon","github","email","researchgate","googleScholar","linkedIn","social","FaMailBulk","MdEmail","FaMastodon","rel","substring","indexOf","FaTwitter","FaLinkedin","FaGithub","FaResearchgate","SiGooglescholar","Research","FaSearch","gridArea","maxHeight","placeItems","color","Landing","description","Hero","Home","Layout","id","Contact","Head","name","content","DefaultContext","undefined","size","attr","IconContext","_excluded","_objectWithoutProperties","excluded","target","Object","hasOwnProperty","call","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_extends","assign","bind","this","ownKeys","keys","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","Symbol","toPrimitive","String","Number","_toPrimitive","configurable","writable","Tree2Element","tree","node","tag","child","GenIcon","data","props","IconBase","elem","conf","svgProps","computedSize","stroke","fill","strokeWidth","xmlns","Consumer"],"sourceRoot":""}